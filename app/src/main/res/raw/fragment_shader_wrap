#version 300 es
uniform sampler2D myTexture;
out vec4 outputColor;
smooth in vec2 textureCoords; 
const vec3 W = vec3(0.7, 0.8, 0.4);
void main()
{
    float T = 0.88;

    vec2 st = textureCoords.st;

    float ResS=720.0;
    float ResT=720.0;

    vec2 stp0=vec2(1.0/ResS,0.0);
    vec2 st0p=vec2(0.0,1.0/ResT);
    vec2 stpp=vec2(1.0/ResS,1.0/ResT);
    vec2 stpm=vec2(1.0/ResS,-1.0/ResT);

    vec3 i00=texture(myTexture,textureCoords).rgb;

    vec3 im1m1=texture(myTexture,textureCoords-stpp).rgb;
    vec3 ip1p1=texture(myTexture,textureCoords+stpp).rgb;

    vec3 im1p1=texture(myTexture,textureCoords-stpm).rgb;
    vec3 ip1m1=texture(myTexture,textureCoords+stpm).rgb;

    vec3 im10=texture(myTexture,textureCoords-stp0).rgb;
    vec3 ip10=texture(myTexture,textureCoords+stp0).rgb;

    vec3 i0m1=texture(myTexture,textureCoords-st0p).rgb;
    vec3 i0p1=texture(myTexture,textureCoords+st0p).rgb;

    vec3 irgb=vec3(0.0,0.0,0.0);

    irgb+= 1.0*(im1m1+ip1m1+ip1p1+im1p1);

    irgb+= 2.0*(im10+ip10+i0p1);

    irgb+= 4.0*(i00);

    irgb/= 16.0;


    float luminance = dot(irgb, W);
    vec3 target = vec3(luminance+0.06, luminance+0.3, luminance+0.16);
    vec3 mx=mix(target, irgb, T);

    float Tt = -0.01;
    vec3 targt = vec3(0.3, 0.3, 0.3);
    vec3 mixng=mix(mx,targt,Tt);
    vec3 black = vec3(0.0, 0.0,0.0);
    float brtT=1.30;
    vec3 mn=mix(black,mixng,brtT);
    float G=-0.05;
    outputColor = vec4(mix(mn,irgb,G), 1.0);
}